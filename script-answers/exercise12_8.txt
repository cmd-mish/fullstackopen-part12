mikhailpopov@Mishas-MBP todo-backend % docker-compose -f docker-compose.dev.yml up -d
Creating network "todo-backend_default" with the default driver
Creating todo-backend_mongo_1 ... done
mikhailpopov@Mishas-MBP todo-backend % docker container ls
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS         PORTS                     NAMES
cc89d44db54c   mongo     "docker-entrypoint.sâ€¦"   10 seconds ago   Up 9 seconds   0.0.0.0:3456->27017/tcp   todo-backend_mongo_1
mikhailpopov@Mishas-MBP todo-backend % docker exec -it todo-backend_mongo_1 bash
root@cc89d44db54c:/# mongosh -u root -p example
Current Mongosh Log ID: 632614514f1eb6377bb69ed8
Connecting to:          mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+1.5.4
Using MongoDB:          6.0.1
Using Mongosh:          1.5.4

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2022-09-17T18:38:29.710+00:00: vm.max_map_count is too low
------

------
   Enable MongoDB's free cloud-based monitoring service, which will then receive and display
   metrics about your deployment (disk utilization, CPU, operation statistics, etc).
   
   The monitoring data will be available on a MongoDB website with a unique URL accessible to you
   and anyone you share the URL with. MongoDB may use this information to make product
   improvements and to suggest MongoDB products and deployment options to you.
   
   To enable free monitoring, run the following command: db.enableFreeMonitoring()
   To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
------

test> show dbs
admin         100.00 KiB
config         72.00 KiB
local          72.00 KiB
the_database   56.00 KiB
test> use the_database
switched to db the_database
the_database> show collections
todos
the_database> db.todos.find({})
[
  {
    _id: ObjectId("63234b5774fcbadfb009fafa"),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId("63234b5774fcbadfb009fafb"),
    text: 'test',
    done: true
  }
]
the_database> db.todos.insertOne({
... "text": "Increase the number of tools in my toolbelt", "done": false })
{
  acknowledged: true,
  insertedId: ObjectId("632614a3a9b3620e7d35ec13")
}
the_database> db.todos.find({})
[
  {
    _id: ObjectId("63234b5774fcbadfb009fafa"),
    text: 'Write code',
    done: true
  },
  {
    _id: ObjectId("63234b5774fcbadfb009fafb"),
    text: 'test',
    done: true
  },
  {
    _id: ObjectId("632614a3a9b3620e7d35ec13"),
    text: 'Increase the number of tools in my toolbelt',
    done: false
  }
]
the_database> exit
root@cc89d44db54c:/# exit
exit